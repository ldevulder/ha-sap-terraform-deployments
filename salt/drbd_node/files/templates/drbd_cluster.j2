{% set data = pillar.cluster.configure.template.parameters %}
{% set cloud_provider = grains['cloud_provider'] %}
{% set drbd = salt['pillar.get']('drbd', default={}, merge=True) %}
{% set nfsid = 1 %}

#
# defaults and production DRBD
#

rsc_defaults \
    resource-stickiness="1000" \
    migration-threshold="5000"

op_defaults \
    timeout="600"

primitive nfsserver systemd:nfs-server \
        op monitor interval=30s

clone cl-nfsserver nfsserver \
        meta interleave=true

# Need to edit drbd pillar file.
{% for res in drbd.resource %}
primitive drbd-{{ res.name }} ocf:linbit:drbd \
          params drbd_resource={{ res.name }} \
          op monitor interval=15 role=Master \
          op monitor interval=30 role=Slave

ms ms_{{ res.name }} drbd-{{ res.name }} \
   meta master-max=1 master-node-max=1 \
   meta clone-max={{ res.nodes | length }} clone-node-max=1 \
   meta notify=true target-role=Started

primitive fs_{{ res.name }} ocf:heartbeat:Filesystem \
   params device={{ res.device }} directory={{ res.mount_point }} fstype={{ res.file_system }} \
   options=noatime,nodiratime \
   op monitor interval="20" timeout="40s"

{% set nic = "nic="~pillar.cluster.interface|default('eth0')|json if cloud_provider == "google-cloud-platform" else "nic="~pillar.cluster.interface|json if pillar.cluster.interface is defined else "" %}
{%- set cidr_netmask = "cidr_netmask=32" if cloud_provider == "google-cloud-platform" else "" %}

{% if cloud_provider == "amazon-web-services" %}
property $id="cib-bootstrap-options" \
    stonith-enabled="true" \
    stonith-action="off" \
    stonith-timeout="150s"

primitive rsc_aws_stonith_{{ res.name }}_nfs stonith:external/ec2 \
    params tag={{ data.instance_tag }} profile={{ data.cluster_profile }} \
    op start interval=0 timeout=180 \
    op stop interval=0 timeout=180 \
    op monitor interval=120 timeout=60 \
    meta target-role=Started

primitive vip_{{ res.name }}_nfs ocf:suse:aws-vpc-move-ip \
    params ip={{ data.virtual_ip }} routing_table={{ data.route_table }} \
    interface={{ pillar.cluster.interface|default('eth0')|json }} profile={{ data.cluster_profile }} \
    op start interval=0 timeout=180 \
    op stop interval=0 timeout=180 \
    op monitor interval=60 timeout=60
{% else %}
primitive vip_{{ res.name }}_nfs IPaddr2 \
        params ip={{ res.virtual_ip }} {{ cidr_netmask }} {{ nic }} \
        op monitor interval=10 timeout=20

{% if cloud_provider == "microsoft-azure" %}
primitive nc_{{ res.name }}_nfs anything \
  params binfile="/usr/bin/socat" cmdline_options="-U TCP-LISTEN:{{ data.probe }},backlog=10,fork,reuseaddr /dev/null" \
  op monitor timeout=20s interval=10 depth=0
{% endif %}
{% endif %}

primitive exportfs_work_{{ res.name }} exportfs \
        params directory={{ res.mount_point }} fsid={{ nfsid + loop.index0 }} \
        options="rw,no_root_squash" clientspec="*" wait_for_leasetime_on_stop=true \
        op monitor interval=30s

group g-nfs_{{ res.name }} fs_{{ res.name }} vip_{{ res.name }}_nfs exportfs_work_{{ res.name }} {% if cloud_provider == "microsoft-azure" %} nc_{{ res.name }}_nfs {% endif %}

order o_drbd_{{ res.name }}-before-fs_{{ res.name }} \
  ms_{{ res.name }}:promote g-nfs_{{ res.name }}:start

colocation c_fs_{{ res.name }}-with_drbd_{{ res.name }} \
  inf: g-nfs_{{ res.name }} ms_{{ res.name }}:Master\

{% endfor %}
